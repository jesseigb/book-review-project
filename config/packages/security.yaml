security:
    enable_authenticator_manager: false
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        oauth_token:
            pattern: ^/oauth/v2/token
            security: false
        oauth_authorize:
            pattern: ^/oauth/v2/auth
            form_login:
                provider: app_user_provider
                check_path: login
                login_path: login
                use_referer: false
        api:
            pattern: ^/api
            fos_oauth: true
            stateless: true
            anonymous: true
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                # "login" is the name of the route created previously
                login_path: login
                check_path: login
                default_target_path: home
            logout:
                path: logout
                # where to redirect after logout
                target: login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/deleteReview, roles: ROLE_ADMIN }
        - { path: ^/deleteUser, roles: ROLE_ADMIN }
        - { path: ^/add/findBook, roles: [ IS_AUTHENTICATED_FULLY ]}
        - { path: ^/add/review, roles: [ IS_AUTHENTICATED_FULLY ]}
        - { path: ^/edit/review, roles: [ IS_AUTHENTICATED_FULLY ]}
        - { path: ^/add/book, roles: [ IS_AUTHENTICATED_FULLY ]}
        - { path: ^/profile, roles: [ IS_AUTHENTICATED_FULLY ]}
        - { path: ^/nytimesbooks/search/, roles: [ IS_AUTHENTICATED_FULLY ]}
        - { path: ^/nytimesbooks/review/, roles: [ IS_AUTHENTICATED_FULLY ]}
